<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.sitenv.services</groupId>
	<artifactId>scorecard</artifactId>
	<packaging>war</packaging>
	<!-- Update version for each new release and apply the old version to previousProjectVersion -->
	<version>2.5</version>
	<name>ccda-smart-scorecard Maven Webapp </name>
	<url>http://maven.apache.org</url>

	<properties>
		<!-- Update previousProjectVersion to what the version tag was previously 
			for each new release. Then run a mvn clean, commit/merge the updated files, 
			then run a build of the war and deploy -->
		<previousProjectVersion>2.4</previousProjectVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.springframework.version>4.1.0.RELEASE</org.springframework.version>
	</properties>

		<dependencies>
		
			<!-- dependency for excel generator -->
			<dependency>
    			<groupId>org.apache.poi</groupId>
    			<artifactId>poi</artifactId>
    			<version>3.17</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.4</version>
			</dependency>
			<!-- spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>4.2.4.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>1.9.2.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>4.2.4.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>4.2.4.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-oxm</artifactId>
				<version>4.2.4.RELEASE</version>
			</dependency>
			<!-- /spring -->

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.1.0</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>2.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.17</version>
			</dependency>

			<dependency>
				<groupId>log4j</groupId>
				<artifactId>apache-log4j-extras</artifactId>
				<version>1.2.17</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.3.3</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-http</artifactId>
				<version>4.2.6.RELEASE</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>2.8.11</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.8.11.1</version>
			</dependency>

			<dependency>
				<groupId>org.sitenv.services</groupId>
				<artifactId>ccdaparsing</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<!-- database -->
			<dependency>
				<groupId>org.hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>2.3.3</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>5.0.7.Final</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.1-api</artifactId>
				<version>1.0.0.Final</version>
			</dependency>
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.2.2</version>
			</dependency>
			<dependency>
			    <groupId>org.postgresql</groupId>
			    <artifactId>postgresql</artifactId>
			    <version>42.2.12</version>
			</dependency>
			<!-- /database -->

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.3.6</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>4.3.3</version>
			</dependency>

			<!-- save report/pdf creation -->
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>1.7.2</version>
			</dependency>
			<dependency>
				<groupId>org.xhtmlrenderer</groupId>
				<artifactId>flying-saucer-pdf</artifactId>
				<version>9.0.7</version>
			</dependency>
			<!-- /save report/pdf creation -->

			<!-- testing -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>2.5</version>
			</dependency>
			<!-- /testing -->
			
		</dependencies>


		<build>
			<finalName>scorecard</finalName>
			<plugins>
				<!-- Enforces cache refresh by updating the version of each file for 
					each release. Only a clean is necessary versus a full build to accomplish 
					the task -->
				<plugin>
					<groupId>com.google.code.maven-replacer-plugin</groupId>
					<artifactId>replacer</artifactId>
					<version>1.5.3</version>
					<executions>
						<execution>
							<phase>pre-clean</phase>
							<goals>
								<goal>replace</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<includes>
							<include>${project.basedir}/src/main/webapp/index.html</include>
							<include>${project.basedir}/src/main/webapp/scApp.js</include>						
						</includes>
						<replacements>
							<replacement>
								<token>version=R${previousProjectVersion}</token>
								<value>version=R${project.version}</value>
							</replacement>
						</replacements>
					</configuration>
				</plugin>
				<!-- Updates version on landing page. Separate configuration as replacement is too simple/dangerous to look at more files -->
				<!--
				<plugin>
					<groupId>com.google.code.maven-replacer-plugin</groupId>
					<artifactId>replacer</artifactId>
					<version>1.5.3</version>
					<executions>
						<execution>
							<phase>pre-clean</phase>
							<goals>
								<goal>replace</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<includes>
							<include>${project.basedir}/src/main/webapp/siteTopLevelContent.html</include>							
						</includes>
						<replacements>
							<replacement>
								<token>${previousProjectVersion}</token>
								<value>${project.version}</value>
							</replacement>
						</replacements>
					</configuration>
				</plugin>
				-->				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.1.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>
			</plugins>
			<directory>${project.basedir}/target</directory>
		</build>

</project>
